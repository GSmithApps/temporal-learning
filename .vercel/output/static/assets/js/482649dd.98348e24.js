"use strict";(self.webpackChunktemporal_learning=self.webpackChunktemporal_learning||[]).push([[6286],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var u=r.createContext({}),c=function(e){var t=r.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=c(a),m=n,k=p["".concat(u,".").concat(m)]||p[m]||d[m]||l;return a?r.createElement(k,o(o({ref:t},s),{},{components:a})):r.createElement(k,o({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var c=2;c<l;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>o});var r=a(7294),n=a(4334);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(l,o),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>N});var r=a(3117),n=a(7294),l=a(4334),o=a(6775),i=a(1980),u=a(7392),c=a(12);function s(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function d(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??s(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const r=(0,o.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(l),(0,n.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(r.location.search);t.set(l,e),r.replace({...r.location,search:t.toString()})}),[l,r])]}function k(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,l=d(e),[o,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:l}))),[u,s]=m({queryString:a,groupId:r}),[k,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,l]=(0,c.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:r}),f=(()=>{const e=u??k;return p({value:e,tabValues:l})?e:null})();(0,n.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:o,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),s(e),h(e)}),[s,h,l]),tabValues:l}}var h=a(2466),f=a(2389);const g="tabList__CuJ",b="tabItem_LNqP";function v(e){let{className:t,block:a,selectedValue:o,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:s}=(0,h.o5)(),d=e=>{const t=e.currentTarget,a=c.indexOf(t),r=u[a].value;r!==o&&(s(t),i(r))},p=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:i}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:p,onClick:d},i,{className:(0,l.Z)("tabs__item",b,i?.className,{"tabs__item--active":o===t})}),a??t)})))}function y(e){let{lazy:t,children:a,selectedValue:r}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function C(e){const t=k(e);return n.createElement("div",{className:(0,l.Z)("tabs-container",g)},n.createElement(v,(0,r.Z)({},e,t)),n.createElement(y,(0,r.Z)({},e,t)))}function N(e){const t=(0,f.Z)();return n.createElement(C,(0,r.Z)({key:String(t)},e))}},2542:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=a(3117),n=(a(7294),a(3905));a(5162),a(4866);const l={id:"cli-reference",sidebar_position:14,keywords:["go","golang","temporal","sdk","tutorial"],title:"Background Checks CLI reference",image:"/img/temporal-logo-twitter-card.png"},o=void 0,i={unversionedId:"examples/go/background-checks/cli-reference",id:"examples/go/background-checks/cli-reference",title:"Background Checks CLI reference",description:"For this Learning Path, you use three distinct CLIs to represent the user interfaces (UI) that each user type would interact with.",source:"@site/docs/examples/go/background-checks/cli-reference.md",sourceDirName:"examples/go/background-checks",slug:"/examples/go/background-checks/cli-reference",permalink:"/examples/go/background-checks/cli-reference",draft:!1,tags:[],version:"current",lastUpdatedAt:1714487900,formattedLastUpdatedAt:"Apr 30, 2024",sidebarPosition:14,frontMatter:{id:"cli-reference",sidebar_position:14,keywords:["go","golang","temporal","sdk","tutorial"],title:"Background Checks CLI reference",image:"/img/temporal-logo-twitter-card.png"},sidebar:"tutorialSidebar",previous:{title:"Background Checks API reference",permalink:"/examples/go/background-checks/api-reference"}},u={},c=[{value:"<code>bgc-company</code>",id:"bgc-company",level:2},{value:"<code>list</code>",id:"list",level:3},{value:"<code>--email</code> (optional)",id:"--email-optional",level:4},{value:"<code>--status</code> (optional)",id:"--status-optional",level:4},{value:"<code>start</code>",id:"start",level:3},{value:"<code>--email</code> (required)",id:"--email-required",level:4},{value:"<code>--package</code> (required)",id:"--package-required",level:4},{value:"<code>cancel</code>",id:"cancel",level:3},{value:"<code>--id</code> (required)",id:"--id-required",level:4},{value:"<code>--email</code> (required)",id:"--email-required-1",level:4},{value:"<code>bgc-candidate</code>",id:"bgc-candidate",level:2},{value:"<code>accept</code>",id:"accept",level:3},{value:"<code>--token</code> (required)",id:"--token-required",level:4},{value:"<code>--ssn</code> (required)",id:"--ssn-required",level:4},{value:"<code>--address</code> (required)",id:"--address-required",level:4},{value:"<code>--dob</code> (required)",id:"--dob-required",level:4},{value:"<code>decline</code>",id:"decline",level:3},{value:"<code>bgc-researcher</code>",id:"bgc-researcher",level:2},{value:"<code>employmentverify</code>",id:"employmentverify",level:3},{value:"<code>--token</code> (required)",id:"--token-required-1",level:4}],s={toc:c};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"For this Learning Path, you use three distinct CLIs to represent the user interfaces (UI) that each user type would interact with."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#bgc-company"},"Company CLI")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#bgc-candidate"},"Candidate CLI")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#bgc-researcher"},"Researcher CLI"))),(0,n.kt)("p",null,"To execute these CLI commands, prefix them with ",(0,n.kt)("inlineCode",{parentName:"p"},"./run-cli")," while in the project root."),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"./run-cli bgc-company list\n")),(0,n.kt)("h2",{id:"bgc-company"},(0,n.kt)("inlineCode",{parentName:"h2"},"bgc-company")),(0,n.kt)("p",null,"CLI tool that represents the UI for the Company."),(0,n.kt)("h3",{id:"list"},(0,n.kt)("inlineCode",{parentName:"h3"},"list")),(0,n.kt)("p",null,"Lists Background Checks that are in the system."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"bgc-company list\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Output"),":"),(0,n.kt)("p",null,"By default, without any options, lists all Background Checks from most recent to oldest."),(0,n.kt)("p",null,"Default list count is 100."),(0,n.kt)("h4",{id:"--email-optional"},(0,n.kt)("inlineCode",{parentName:"h4"},"--email")," (optional)"),(0,n.kt)("p",null,"Lists all Background Checks associated with the email address."),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"bgc-company list --email <candidate_email>\n")),(0,n.kt)("h4",{id:"--status-optional"},(0,n.kt)("inlineCode",{parentName:"h4"},"--status")," (optional)"),(0,n.kt)("p",null,"Lists Background Checks that match the provided status."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"bgc-company list --status <status>\n")),(0,n.kt)("p",null,"Possible ",(0,n.kt)("inlineCode",{parentName:"p"},"--status")," values:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"started"),(0,n.kt)("li",{parentName:"ul"},"pending_consent"),(0,n.kt)("li",{parentName:"ul"},"running"),(0,n.kt)("li",{parentName:"ul"},"completed"),(0,n.kt)("li",{parentName:"ul"},"cancelled")),(0,n.kt)("h3",{id:"start"},(0,n.kt)("inlineCode",{parentName:"h3"},"start")),(0,n.kt)("p",null,"Starts a new Background Check."),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"bgc-company start --email <candidate_email> --package <package_type>\n")),(0,n.kt)("p",null,"Output:"),(0,n.kt)("p",null,'If successful, the output shows "Created check".'),(0,n.kt)("h4",{id:"--email-required"},(0,n.kt)("inlineCode",{parentName:"h4"},"--email")," (required)"),(0,n.kt)("p",null,"Email address of the Candidate"),(0,n.kt)("h4",{id:"--package-required"},(0,n.kt)("inlineCode",{parentName:"h4"},"--package")," (required)"),(0,n.kt)("p",null,"Package of searches."),(0,n.kt)("p",null,"Possible values are:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"standard"),(0,n.kt)("li",{parentName:"ul"},"full")),(0,n.kt)("h3",{id:"cancel"},(0,n.kt)("inlineCode",{parentName:"h3"},"cancel")),(0,n.kt)("p",null,"Cancels a Background Check."),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"bgc-company cancel --email <email> --id <check_id>\n")),(0,n.kt)("p",null,"Output:"),(0,n.kt)("p",null,'If successful the output shows "Cancelled check".'),(0,n.kt)("h4",{id:"--id-required"},(0,n.kt)("inlineCode",{parentName:"h4"},"--id")," (required)"),(0,n.kt)("p",null,"Background Check Id"),(0,n.kt)("h4",{id:"--email-required-1"},(0,n.kt)("inlineCode",{parentName:"h4"},"--email")," (required)"),(0,n.kt)("p",null,"Email address of the Candidate"),(0,n.kt)("h2",{id:"bgc-candidate"},(0,n.kt)("inlineCode",{parentName:"h2"},"bgc-candidate")),(0,n.kt)("p",null,"CLI tool that represents the UI for the Candidate"),(0,n.kt)("h3",{id:"accept"},(0,n.kt)("inlineCode",{parentName:"h3"},"accept")),(0,n.kt)("p",null,"Candidate accepts the Background Check"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"bgc-candidate accept --token <token> --ssn <ssn> --address <address> --dob <dob>\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Output:")),(0,n.kt)("p",null,'If successful, the output shows "Accepted".'),(0,n.kt)("h4",{id:"--token-required"},(0,n.kt)("inlineCode",{parentName:"h4"},"--token")," (required)"),(0,n.kt)("p",null,"Background Check Token."),(0,n.kt)("p",null,"Get this from the email."),(0,n.kt)("h4",{id:"--ssn-required"},(0,n.kt)("inlineCode",{parentName:"h4"},"--ssn")," (required)"),(0,n.kt)("p",null,"Social Security number of the Candidate."),(0,n.kt)("h4",{id:"--address-required"},(0,n.kt)("inlineCode",{parentName:"h4"},"--address")," (required)"),(0,n.kt)("p",null,"Physical address of the Candidate"),(0,n.kt)("h4",{id:"--dob-required"},(0,n.kt)("inlineCode",{parentName:"h4"},"--dob")," (required)"),(0,n.kt)("p",null,"Date of birth of the Candidate"),(0,n.kt)("h3",{id:"decline"},(0,n.kt)("inlineCode",{parentName:"h3"},"decline")),(0,n.kt)("p",null,"Candidate declined the Background Check"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"bgc-candidate decline --token <token>\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Output:")),(0,n.kt)("p",null,'If successful, the output shows "Declined".'),(0,n.kt)("h2",{id:"bgc-researcher"},(0,n.kt)("inlineCode",{parentName:"h2"},"bgc-researcher")),(0,n.kt)("p",null,"CLI tool that represents the UI for the Researcher"),(0,n.kt)("h3",{id:"employmentverify"},(0,n.kt)("inlineCode",{parentName:"h3"},"employmentverify")),(0,n.kt)("p",null,"Complete a Research Request by providing input."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"bgc-researcher employmentverify --token <token>\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Output:")),(0,n.kt)("p",null,'If successful, the output shows "Employment verification received".'),(0,n.kt)("h4",{id:"--token-required-1"},(0,n.kt)("inlineCode",{parentName:"h4"},"--token")," (required)"),(0,n.kt)("p",null,"Background Check Token."),(0,n.kt)("p",null,"Get this from the email."))}d.isMDXComponent=!0}}]);