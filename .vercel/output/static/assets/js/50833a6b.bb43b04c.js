"use strict";(self.webpackChunktemporal_learning=self.webpackChunktemporal_learning||[]).push([[7710],{5997:(e,t,n)=>{n.d(t,{Zt:()=>l,yT:()=>r});var a=n(7294),o=n(2004);const r=function(e){let{url:t,loop:n,playing:r}=e;return a.createElement("div",{className:"relative rounded-lg shadow-lg",style:{position:"relative",paddingTop:"56.25%",marginBottom:20}},a.createElement(o.Z,{url:t,loop:n,playing:r,width:"100%",height:"100%",controls:!0,style:{position:"absolute",top:0,left:0}}))};n(4673);var i=n(3612);function l(){return a.createElement(i.Z,{type:"info",title:"WORK IN PROGRESS"},a.createElement("p",null,"This tutorial is a work in progress. Some sections may be incomplete, out of date, or missing. We're working to update it."))}},6868:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>k,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var a=n(3117),o=(n(7294),n(3905)),r=n(5162),i=n(4866),l=n(5997);const s={id:"nextjs-tutorial",sidebar_position:2,keywords:["TypeScript","temporal","sdk","tutorial","NextJS"],tags:["TypeScript","SDK"],last_update:{date:new Date("2021-10-01T00:00:00.000Z")},title:"Integrating Temporal into an existing Next.js application",description:"Explore how Temporal integrates into an existing Next.js application using Next.js API routes. This gives you the ability to write full-stack, long-running applications end to end in TypeScript.",image:"/img/temporal-logo-twitter-card.png"},p=void 0,c={unversionedId:"tutorials/typescript/nextjs/nextjs-tutorial",id:"tutorials/typescript/nextjs/nextjs-tutorial",title:"Integrating Temporal into an existing Next.js application",description:"Explore how Temporal integrates into an existing Next.js application using Next.js API routes. This gives you the ability to write full-stack, long-running applications end to end in TypeScript.",source:"@site/docs/tutorials/typescript/nextjs/index.md",sourceDirName:"tutorials/typescript/nextjs",slug:"/tutorials/typescript/nextjs/",permalink:"/tutorials/typescript/nextjs/",draft:!1,tags:[{label:"TypeScript",permalink:"/tags/type-script"},{label:"SDK",permalink:"/tags/sdk"}],version:"current",lastUpdatedAt:1633046400,formattedLastUpdatedAt:"Oct 1, 2021",sidebarPosition:2,frontMatter:{id:"nextjs-tutorial",sidebar_position:2,keywords:["TypeScript","temporal","sdk","tutorial","NextJS"],tags:["TypeScript","SDK"],last_update:{date:"2021-10-01T00:00:00.000Z"},title:"Integrating Temporal into an existing Next.js application",description:"Explore how Temporal integrates into an existing Next.js application using Next.js API routes. This gives you the ability to write full-stack, long-running applications end to end in TypeScript.",image:"/img/temporal-logo-twitter-card.png"},sidebar:"tutorialSidebar",previous:{title:"TypeScript tutorials",permalink:"/tutorials/typescript/"},next:{title:"Build a subscription workflow with Temporal and TypeScript",permalink:"/tutorials/typescript/subscriptions/"}},u={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Add Temporal to your Next.js project",id:"add-temporal-to-your-nextjs-project",level:2},{value:"Write your first Workflow, Activity and Worker",id:"write-your-first-workflow-activity-and-worker",level:2},{value:"Write a Temporal Client inside a Next.js API Route",id:"write-a-temporal-client-inside-a-nextjs-api-route",level:2},{value:"Call the API Route from the Next.js frontend",id:"call-the-api-route-from-the-nextjs-frontend",level:2},{value:"Deploying your Temporal + Next.js app",id:"deploying-your-temporal--nextjs-app",level:2},{value:"Production Concerns",id:"production-concerns",level:2},{value:"Conclusion",id:"conclusion",level:2}],m={toc:d};function k(e){let{components:t,...s}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Temporal TypeScript SDK",src:n(2813).Z,width:"902",height:"254"})),(0,o.kt)(l.Zt,{mdxType:"OutdatedNotice"}),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"In this tutorial, you'll explore how Temporal integrates into an ",(0,o.kt)("strong",{parentName:"p"},"existing Next.js application")," using Next.js API routes.  This gives you the ability to write full-stack, long-running applications end to end in TypeScript."),(0,o.kt)("p",null,"This tutorial is written for a reasonably experienced TypeScript/Next.js developer.  Whether you are using ",(0,o.kt)("a",{parentName:"p",href:"https://www.gatsbyjs.com/docs/reference/functions/"},"Gatsby Functions"),", ",(0,o.kt)("a",{parentName:"p",href:"https://blitzjs.com/docs/api-routes"},"Blitz.js API Routes")," or just have a standard Express.js app, you should be able to adapt this tutorial with only minor modifications."),(0,o.kt)("admonition",{title:"Skip ahead",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"To skip straight to a fully working example, you can check our ",(0,o.kt)("a",{parentName:"strong",href:"https://github.com/temporalio/samples-typescript/tree/main/nextjs-ecommerce-oneclick"},"samples-typescript repo"))," or use the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.temporal.io/typescript/package-initializer"},"package initializer")," to create a new project with the following command:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-command"},"npx @temporalio/create@latest nextjs-temporal-app --sample nextjs-ecommerce-oneclick\n"))),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/getting_started/typescript/dev_environment/"},"Set up a local development environment for developing Temporal applications using TypeScript")),(0,o.kt)("li",{parentName:"ul"},"Review the ",(0,o.kt)("a",{parentName:"li",href:"/getting_started/typescript/hello_world_in_typescript/"},"Hello World in TypeScript tutorial")," to understand the basics of getting a Temporal TypeScript SDK project up and running.")),(0,o.kt)("h2",{id:"add-temporal-to-your-nextjs-project"},"Add Temporal to your Next.js project"),(0,o.kt)("p",null,"Temporal doesn't prescribe folder structure; feel free to ignore or modify these instructions per your own needs."),(0,o.kt)("p",null,"You can install Temporal's packages with a single dependency, then set up folders and files for your Workflow, Activity, and Worker code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @temporalio/client @temporalio/worker @temporalio/workflow @temporalio/activity # in Next.js project root\nmkdir -p temporal/src # create folder, recursively\ncd temporal\ntouch src/worker.ts src/workflows.ts src/activities.ts\n")),(0,o.kt)("p",null,"Configure TypeScript to compile from ",(0,o.kt)("inlineCode",{parentName:"p"},"temporal/src")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"temporal/lib")," with a ",(0,o.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),"."),(0,o.kt)("p",null,"Sample ",(0,o.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," to get you started:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// /temporal/tsconfig.json\n{\n  "extends": "@tsconfig/node16/tsconfig.json", // optional but nice to have\n  "version": "4.4.2",\n  "compilerOptions": {\n  "emitDecoratorMetadata": false,\n  "experimentalDecorators": false,\n  "declaration": true,\n  "declarationMap": true,\n  "sourceMap": true,\n  "composite": true,\n  "rootDir": "./src",\n  "outDir": "./lib"\n  },\n  "include": ["src/**/*.ts"],\n  "exclude": ["node_modules"]\n}\n')),(0,o.kt)("p",null,"For convenience, you may want to set up some npm scripts to run the builds in your project root ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// /package.json\n  "scripts": {\n  "dev": "npm-run-all -l build:temporal --parallel dev:temporal dev:next start:worker",\n  "dev:next": "next dev",\n  "dev:temporal": "tsc --build --watch ./temporal/tsconfig.json",\n  "build:next": "next build",\n  "build:temporal": "tsc --build ./temporal/tsconfig.json",\n  "start": "npm run dev",\n  "start:worker": "nodemon ./temporal/lib/worker",\n  "lint": "eslint ."\n  },\n')),(0,o.kt)("p",null,"In the above example we use ",(0,o.kt)("inlineCode",{parentName:"p"},"npm-run-all")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"nodemon")," so that we are able to do 4 things:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"build Temporal once"),(0,o.kt)("li",{parentName:"ul"},"start Next.js locally"),(0,o.kt)("li",{parentName:"ul"},"start a Temporal Worker"),(0,o.kt)("li",{parentName:"ul"},"rebuild Temporal files on change")),(0,o.kt)("p",null,"in a single ",(0,o.kt)("inlineCode",{parentName:"p"},"npm run dev")," command."),(0,o.kt)("h2",{id:"write-your-first-workflow-activity-and-worker"},"Write your first Workflow, Activity and Worker"),(0,o.kt)("p",null,"Inside of ",(0,o.kt)("inlineCode",{parentName:"p"},"/temporal/src/activities.ts")," we'll write a simple Activity function to start with:"),(0,o.kt)(i.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"ts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// /temporal/src/activities.ts\nimport { Context } from '@temporalio/activity';\n\nexport async function purchase(id: string): Promise<string> {\n  console.log(`Purchased ${id}!`);\n  return Context.current().info.activityId;\n}\n"))),(0,o.kt)(r.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// /temporal/src/activities.ts\nimport { Context } from '@temporalio/activity';\n\nexport async function purchase(id) {\n  console.log(`Purchased ${id}!`);\n  return Context.current().info.activityId;\n}\n")))),(0,o.kt)("p",null,"Activities are the only way to interact with the outside world in Temporal (e.g. making API requests, or accessing the filesystem).\nSee the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.temporal.io/dev-guide/typescript/foundations//#develop-activities"},"Activities docs")," for more info."),(0,o.kt)("p",null,"Inside of ",(0,o.kt)("inlineCode",{parentName:"p"},"/temporal/src/workflows.ts")," we'll write a Workflow function that calls this Activity:"),(0,o.kt)(i.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"ts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// /temporal/src/workflows.ts\nimport { proxyActivities, sleep } from '@temporalio/workflow';\nimport type * as activities from './activities'; // purely for type safety\n\nconst { purchase } = proxyActivities<typeof activities>({\n  startToCloseTimeout: '1 minute',\n});\n\nexport async function OneClickBuy(id: string): Promise<string> {\n  const result = await purchase(id); // calling the activity\n  await sleep('10 seconds'); // demo use of timer\n  console.log(`Activity ID: ${result} executed!`);\n}\n"))),(0,o.kt)(r.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// /temporal/src/workflows.ts\nimport { proxyActivities, sleep } from '@temporalio/workflow';\n\nconst { purchase } = proxyActivities({\n  startToCloseTimeout: '1 minute',\n});\n\nexport async function OneClickBuy(id) {\n  const result = await purchase(id); // calling the activity\n  await sleep('10 seconds'); // demo use of timer\n  console.log(`Activity ID: ${result} executed!`);\n}\n")))),(0,o.kt)("p",null,"Workflow code is bundled and run inside a ",(0,o.kt)("a",{parentName:"p",href:"https://docs.temporal.io/typescript/determinism"},"deterministic v8 isolate")," so we can persist and replay every state change.\nThis is why Workflow code must be separate from Activity code, and why we have to ",(0,o.kt)("inlineCode",{parentName:"p"},"proxyActivities")," instead of directly importing them.\nWorkflows also have access to a special set of ",(0,o.kt)("a",{parentName:"p",href:"https://docs.temporal.io/typescript/workflows#workflow-apis"},"Workflow APIs")," which we recommend exploring next."),(0,o.kt)("p",null,"With your Workflows and Activities done, you can now write the Worker that will host both and poll the ",(0,o.kt)("inlineCode",{parentName:"p"},"tutorial")," Task Queue:"),(0,o.kt)(i.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"ts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// /temporal/src/worker.ts\nimport { Worker } from '@temporalio/worker';\nimport * as activities from './activities';\n\nrun().catch((err) => console.log(err));\n\nasync function run() {\n  const worker = await Worker.create({\n    workflowsPath: require.resolve('./workflows'), // passed to Webpack for bundling\n    activities, // directly imported in Node.js\n    taskQueue: 'tutorial',\n  });\n  await worker.run();\n}\n"))),(0,o.kt)(r.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// /temporal/src/worker.ts\nimport { Worker } from '@temporalio/worker';\nimport * as activities from './activities';\n\nrun().catch((err) => console.log(err));\n\nasync function run() {\n  const worker = await Worker.create({\n    workflowsPath: require.resolve('./workflows'),\n    activities,\n    taskQueue: 'tutorial',\n  });\n  await worker.run();\n}\n")))),(0,o.kt)("p",null,"See the full ",(0,o.kt)("a",{parentName:"p",href:"https://docs.temporal.io/dev-guide/typescript/foundations//#run-worker-processes"},"Worker docs")," for more info.\nYou should now be able to run your Worker with ",(0,o.kt)("inlineCode",{parentName:"p"},"npm run build:temporal && npm run start:worker"),", but it's not very exciting because you have no way to start a Workflow yet."),(0,o.kt)("admonition",{title:"Pro tip",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You actually ",(0,o.kt)("em",{parentName:"p"},"can")," start a Workflow with ",(0,o.kt)("a",{parentName:"p",href:"https://docs.temporal.io/tctl-v1/workflow/#start"},(0,o.kt)("inlineCode",{parentName:"a"},"tctl"))," with just a Worker running, and no Client code written!\nIt is out of scope for this tutorial but try to ",(0,o.kt)("inlineCode",{parentName:"p"},"brew install tctl")," and then ",(0,o.kt)("inlineCode",{parentName:"p"},"tctl workflow run --tq tutorial --wt OneClickBuy --et 60 -i '\"Temporal CLI\"'")," if you enjoy developing with CLIs.")),(0,o.kt)("h2",{id:"write-a-temporal-client-inside-a-nextjs-api-route"},"Write a Temporal Client inside a Next.js API Route"),(0,o.kt)("p",null,"We will use Next.js API routes to expose a serverless endpoint that can be called by our frontend and then communicate with Temporal on the backend:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# in Next.js project root\nmkdir pages/api\ntouch pages/api/startBuy.ts\n")),(0,o.kt)("p",null,"Now we will create a Client and start a Workflow Execution:"),(0,o.kt)(i.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"ts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// pages/api/startBuy.ts\nimport { Connection, WorkflowClient } from '@temporalio/client';\nimport { OneClickBuy } from '../../temporal/lib/workflows.js';\n\nexport default async function startBuy(req, res) {\n  const { itemId } = req.body; // TODO: validate itemId and req.method\n  const client = new WorkflowClient();\n  const handle = await client.start(OneClickBuy, {\n    workflowId: 'business-meaningful-id',\n    taskQueue: 'tutorial', // must match the taskQueue polled by Worker above\n    args: [itemId],\n    // workflowId: // TODO: use business-meaningful user/transaction ID here\n  }); // kick off the purchase async\n\n  res.status(200).json({ workflowId: handle.workflowId });\n}\n"))),(0,o.kt)(r.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// pages/api/startBuy.ts\nimport { WorkflowClient } from '@temporalio/client';\nimport { OneClickBuy } from '../../temporal/lib/workflows.js';\n\nexport default async function startBuy(req, res) {\n  const { itemId } = req.body; // TODO: validate itemId and req.method\n  const client = new WorkflowClient();\n  const handle = await client.start(OneClickBuy, {\n    workflowId: 'business-meaningful-id',\n    taskQueue: 'tutorial',\n    args: [itemId],\n    // workflowId: // TODO: use business-meaningful user/transaction ID here\n  }); // kick off the purchase async\n  \n  res.status(200).json({ workflowId: handle.workflowId });\n}\n")))),(0,o.kt)("p",null,"Now if you have Next.js and Temporal running, you can at least start a Workflow Execution:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'npm run dev # start Temporal and Next.js in parallel\ncurl -d \'{"itemId":"item123"}\' -H "Content-Type: application/json" -X POST http://localhost:3000/api/startBuy\n')),(0,o.kt)("p",null,"The terminal that has your Temporal Worker will print ",(0,o.kt)("inlineCode",{parentName:"p"},"Purchased item123")," if everything is working properly."),(0,o.kt)("h2",{id:"call-the-api-route-from-the-nextjs-frontend"},"Call the API Route from the Next.js frontend"),(0,o.kt)("p",null,"If you are an experienced React/Next.js dev you should know what to do here.\nFor tutorial purposes we will just assume you have an ",(0,o.kt)("inlineCode",{parentName:"p"},"itemId")," to use here; in real life you are likely to pull this from some other data source like Shopify or a database."),(0,o.kt)(i.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"ts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// /pages/index.ts or whatever page you are on\n// inside event handler\nfetch('/api/startBuy', {\n  method: 'POST',\n  headers: { 'Content-Type': 'application/json' },\n  body: JSON.stringify({ itemId }),\n});\n"))),(0,o.kt)(r.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// /pages/index.ts or whatever page you are on\n// inside event handler\nfetch('/api/startBuy', {\n  method: 'POST',\n  headers: { 'Content-Type': 'application/json' },\n  body: JSON.stringify({ itemId }),\n});\n")))),(0,o.kt)("p",null,"We recommend tracking the state of this API call and possibly toasting success, ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/temporalio/samples-typescript/blob/1f76cb6f78ef494074b937268c14fcc078e36956/nextjs-ecommerce-oneclick/pages/index.tsx#L143"},"per our sample code"),", but of course it is up to you what UX you want to provide."),(0,o.kt)("h2",{id:"deploying-your-temporal--nextjs-app"},"Deploying your Temporal + Next.js app"),(0,o.kt)("p",null,"Your Next.js app, including Next.js API Routes with Temporal Clients in them, can be deployed anywhere Next.js can be deployed, including in serverless environments like Vercel or Netlify."),(0,o.kt)("admonition",{type:"important"},(0,o.kt)("p",{parentName:"admonition"},"However, your Temporal Workers ",(0,o.kt)("strong",{parentName:"p"},"must"),' be deployed in traditional "serverful" environments (e.g. with EC2, Digital Ocean or Render, not a serverless environment).')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Both Temporal Clients and Temporal Workers must be configured to communicate with a Temporal Server instance"),", whether self-hosted or Temporal Cloud.\nYou will need to configure gRPC connection address, namespace, and mTLS cert and key (strongly recommended)."),(0,o.kt)(i.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"ts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// before Worker.create call in worker.ts\nconst connection = await NativeConnection.connect({\n  address,\n  tls: {\n    serverNameOverride,\n    serverRootCACertificate,\n    clientCertPair: {\n      crt: fs.readFileSync(clientCertPath),\n      key: fs.readFileSync(clientKeyPath),\n    },\n  },\n});\n\n// inside each Client call inside API Route\nconst connection = await Connection.connect({\n  address,\n  tls: {\n    serverNameOverride,\n    serverRootCACertificate,\n    clientCertPair: {\n      crt: fs.readFileSync(clientCertPath),\n      key: fs.readFileSync(clientKeyPath),\n    },\n  },\n});\n"))),(0,o.kt)(r.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// before Worker.create call in worker.ts\nconst connection = await NativeConnection.connect({\n  address,\n  tls: {\n    serverNameOverride,\n    serverRootCACertificate,\n    clientCertPair: {\n      crt: fs.readFileSync(clientCertPath),\n      key: fs.readFileSync(clientKeyPath),\n    },\n  },\n});\n\n// inside each Client call inside API Route\nconst connection = await Connection.connect({\n  address,\n  tls: {\n    serverNameOverride,\n    serverRootCACertificate,\n    clientCertPair: {\n      crt: fs.readFileSync(clientCertPath),\n      key: fs.readFileSync(clientKeyPath),\n    },\n  },\n});\n")))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.temporal.io/typescript/security#mtls-tutorial"},"See the mTLS tutorial")," for full details, or get in touch with us on Slack if you have reached this stage."),(0,o.kt)("h2",{id:"production-concerns"},"Production Concerns"),(0,o.kt)("p",null,"As you move into production with your app, please review our docs on:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.temporal.io/typescript/security"},"Securing")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.temporal.io/typescript/testing"},"Testing")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.temporal.io/typescript/patching"},"Patching")," (aka migrating code to new versions)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.temporal.io/typescript/logging"},"Logging")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.temporal.io/typescript/production-deploy"},"Production Deploy Checklist"))),(0,o.kt)("p",null,"You will also want to have a plan for ",(0,o.kt)("strong",{parentName:"p"},"monitoring and scaling your Temporal Workers")," that host and execute your Activity and Workflow code (separately from monitoring and scaling Temporal Server itself)."),(0,o.kt)("h2",{id:"conclusion"},"Conclusion"),(0,o.kt)("p",null,"At this point, you have a working full stack example of a Temporal Workflow running inside your Next.js app."),(0,o.kt)("p",null,"You can explore adding ",(0,o.kt)("a",{parentName:"p",href:"https://docs.temporal.io/dev-guide/typescript/features//#signals"},"Signals"),"  ",(0,o.kt)("a",{parentName:"p",href:"https://docs.temporal.io/dev-guide/typescript/features//#queries"},"Queries")," to your Workflow, then adding a new API Route to call them.\nYou can choose to set up one API Route per Signal or Query, or have one API Route handle all of them, Temporal has no opinion on how you set up routing."),(0,o.kt)("p",null,"Again, for a fully working example, you can check our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/temporalio/samples-typescript/tree/main/nextjs-ecommerce-oneclick"},"samples-typescript repo"),"."))}k.isMDXComponent=!0},2813:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/banner_typescript-2156b7edec5a96f12884d24603574199.png"}}]);